{"version":3,"sources":["webpack:///./src/js/components/ui/Slider.js"],"names":["Flickity","require","Slider","el","this","_init","bindEvents","defaults","autoPlay","contain","customUI","draggable","cellSelector","cellAlign","prevNextButtons","pageDots","groupCells","wrapAround","wheelControl","arrowShape","options","merge","str2json","dataset","parentControllerEl","getClosest","classList","remove","offsetHeight","sliderEl","initCustomUI","slider","containerEl","referenceElement","parentNode","previousButton","querySelector","addEventListener","previous","nextButton","next","window","resize","jQuery","on","e","wheel","addWheelListener","element","event","preventDefault","wheelNormalized","normalizeWheel","applyForce","pixelY","startAnimation","dragEnd","pointer","cellElement","cellIndex","target","click","component","node","ctx"],"mappings":"4NAEMA,G,OAAWC,EAAQ,MAMnBC,E,WACJ,WAAYC,GAAI,YACdC,KAAKC,MAAMF,GACXC,KAAKE,a,0CAGDH,GACJC,KAAKD,GAAKA,EAEVC,KAAKG,SAAW,CACdC,UAAU,EACVC,SAAS,EACTC,UAAU,EACVC,WAAW,EACXC,aAAc,gBACdC,UAAW,OACXC,iBAAiB,EACjBC,UAAU,EACVC,YAAY,EACZC,YAAY,EACZC,cAAc,EACdC,WACE,wfAGJf,KAAKgB,QAAUC,gBAAMjB,KAAKG,SAAUe,YAASnB,EAAGoB,QAAQH,UAExDhB,KAAKoB,mBAAqBC,YAAWrB,KAAKD,GAAI,wBAC9CA,EAAGuB,UAAUC,OAAO,aAEpBxB,EAAGyB,aAEHxB,KAAKyB,SAAW,IAAI7B,EAASG,EAAIC,KAAKgB,SAElChB,KAAKgB,QAAQV,UACfN,KAAK0B,aAAa1B,KAAKyB,Y,mCAIdE,GAAQ,WACbC,EAAc5B,KAAKgB,QAAQa,iBAAmBR,YAAWrB,KAAKD,GAAIC,KAAKgB,QAAQa,kBAAoB7B,KAAKD,GAAG+B,WAwB7GC,EAAiBH,EAAYI,cAAc,qBAC3CD,GACFA,EAAeE,iBAAiB,SAAS,WACvC,EAAKR,SAASS,cAKlB,IAAIC,EAAaP,EAAYI,cAAc,iBAEvCG,GAEFA,EAAWF,iBAAiB,SAAS,WACnC,EAAKR,SAASW,Y,mCAKP,WACXC,OAAOJ,iBAAiB,QAAQ,WAC9B,EAAKR,SAASa,YAGZtC,KAAKoB,oBACPmB,OAAOvC,KAAKoB,oBAAoBoB,GAAG,YAAY,SAACC,GAC9C,EAAKhB,SAASa,YAIdtC,KAAKgB,QAAQF,cACf4B,IAAMC,iBAAiB3C,KAAKyB,SAASmB,SAAS,SAACC,GAC7CA,EAAMC,iBACN,IAAMC,EAAkBC,IAAeH,GACvC,EAAKpB,SAASwB,YAAYF,EAAgBG,OAAS,GACnD,EAAKzB,SAAS0B,iBACd,EAAK1B,SAAS2B,aAIlBpD,KAAKyB,SAASe,GAAG,eAAe,SAAUK,EAAOQ,EAASC,EAAaC,GAChED,GAGLT,EAAMW,OAAOC,e,KAMJC,uBAAU,SAACC,EAAMC,GAC9B,IAAI9D,EAAO6D,EAAMC","file":"20.chunk.bdc9a5791efd17e7ff5d.js","sourcesContent":["import { component } from 'picoapp';\nimport { merge } from 'lodash';\nconst Flickity = require('flickity');\nimport wheel from 'wheel';\nimport normalizeWheel from 'normalize-wheel';\nimport { str2json, getClosest } from '../../utilities';\nimport './slider.scss';\n\nclass Slider {\n  constructor(el) {\n    this._init(el);\n    this.bindEvents();\n  }\n\n  _init(el) {\n    this.el = el;\n\n    this.defaults = {\n      autoPlay: false,\n      contain: true,\n      customUI: false,\n      draggable: true,\n      cellSelector: '.Slider__item',\n      cellAlign: 'left',\n      prevNextButtons: true,\n      pageDots: true,\n      groupCells: false,\n      wrapAround: true,\n      wheelControl: false,\n      arrowShape:\n        'M72.8536585,8.13157895 C71.420864,6.6334674 69.0318491,6.6334674 67.1219512,8.13157895 L28.1463415,47.7368421 C26.631552,48.8114676 26.631552,51.1880631 28.1463415,52.2631579 L67.1219512,91.8684211 C68.2940096,92.6339367 69.258296,93 70.5609756,93 C71.190643,93 72.1568165,92.6339367 72.8536585,91.8684211 C74.368448,90.4338025 74.368448,88.0572069 72.8536585,86.2105263 L36.1707317,50 L72.8536585,13.7894737 C74.3665609,11.9423237 74.3665609,9.56572822 72.8536585,8.13157895 L72.8536585,8.13157895 Z',\n    };\n\n    this.options = merge(this.defaults, str2json(el.dataset.options));\n\n    this.parentControllerEl = getClosest(this.el, '.js-sliderController');\n    el.classList.remove('is-hidden');\n    // trigger redraw for transition\n    el.offsetHeight;\n\n    this.sliderEl = new Flickity(el, this.options);\n\n    if (this.options.customUI) {\n      this.initCustomUI(this.sliderEl);\n    }\n  }\n\n  initCustomUI(slider) {\n    const containerEl = this.options.referenceElement ? getClosest(this.el, this.options.referenceElement) : this.el.parentNode;\n    // const cellsButtonGroup = containerEl.querySelector('.button-group--cells');\n\n    // if (cellsButtonGroup) {\n    //   const cellsButtons = [].slice.call(cellsButtonGroup.children);\n    //   // update buttons on select\n    //   slider.on('cellSelect', (index) => {\n    //     var previousSelectedButton = cellsButtonGroup.querySelector(\n    //       '.is-selected'\n    //     );\n    //     var selectedButton = cellsButtonGroup.children[slider.selectedIndex];\n    //     previousSelectedButton.classList.remove('is-selected');\n    //     selectedButton.classList.add('is-selected');\n    //   });\n\n    //   // cell select\n    //   cellsButtons.forEach((el, index) => {\n    //     el.addEventListener('click', (e) => {\n    //       slider.select(index);\n    //     });\n    //   });\n    // }\n\n    // previous\n    var previousButton = containerEl.querySelector('.button--previous');\n    if (previousButton) {\n      previousButton.addEventListener('click', () => {\n        this.sliderEl.previous();\n      });\n    }\n\n    // next\n    var nextButton = containerEl.querySelector('.button--next');\n    // console.log('CONTAINER: ', containerEl);\n    if (nextButton) {\n      // console.log('NEXT BUTTON: ', nextButton);\n      nextButton.addEventListener('click', () => {\n        this.sliderEl.next();\n      });\n    }\n  }\n\n  bindEvents() {\n    window.addEventListener('load', () => {\n      this.sliderEl.resize();\n    });\n\n    if (this.parentControllerEl) {\n      jQuery(this.parentControllerEl).on('isActive', (e) => {\n        this.sliderEl.resize();\n      });\n    }\n\n    if (this.options.wheelControl) {\n      wheel.addWheelListener(this.sliderEl.element, (event) => {\n        event.preventDefault();\n        const wheelNormalized = normalizeWheel(event);\n        this.sliderEl.applyForce(-wheelNormalized.pixelY / 4);\n        this.sliderEl.startAnimation();\n        this.sliderEl.dragEnd();\n      });\n    }\n\n    this.sliderEl.on('staticClick', function (event, pointer, cellElement, cellIndex) {\n      if (!cellElement) {\n        return;\n      }\n      event.target.click();\n    });\n  }\n}\n\n// module.exports = Slider;\nexport default component((node, ctx) => {\n  new Slider(node, ctx);\n});\n"],"sourceRoot":""}