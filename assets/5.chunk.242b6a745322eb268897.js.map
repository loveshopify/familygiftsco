{"version":3,"sources":["webpack:///./src/js/components/ui/Collapse/index.js"],"names":["Collapse","el","ctx","this","identifier","dataset","content","querySelector","toggler","togglerInitialText","innerText","isOpen","bindEvents","on","state","action","addEventListener","e","toggle","close","open","gsap","set","height","from","duration","immediateRender","classList","add","to","remove","component","node"],"mappings":"8KAIMA,G,kBACJ,WAAYC,EAAIC,GAAK,YACnBC,KAAKF,GAAKA,EACVE,KAAKD,IAAMA,EACXC,KAAKC,WAAaH,EAAGI,QAAQD,WAC7BD,KAAKG,QAAUL,EAAGM,cAAc,sBAChCJ,KAAKK,QAAUP,EAAGM,cAAc,qBAC5BJ,KAAKK,UACPL,KAAKM,mBAAqBN,KAAKK,QAAQE,WAEzCP,KAAKQ,QAAS,EACdR,KAAKS,a,iDAEM,WACXT,KAAKD,IAAIW,GAAG,YAAY,SAACC,GACnBA,EAAMV,YAAc,EAAKA,YACO,mBAAvB,EAAKU,EAAMC,SACpB,EAAKD,EAAMC,aAIbZ,KAAKK,SACPL,KAAKK,QAAQQ,iBAAiB,SAAS,SAACC,GACtC,EAAKC,c,+BAKJf,KAAKQ,OAGRR,KAAKgB,QAFLhB,KAAKiB,S,6BAMPC,IAAKC,IAAInB,KAAKG,QAAS,CAAEiB,OAAQ,SACjCF,IAAKG,KAAKrB,KAAKG,QAAS,CAAEiB,OAAQ,EAAGE,SAAU,GAAKC,iBAAiB,IACrEvB,KAAKF,GAAG0B,UAAUC,IAAI,WACtBzB,KAAKQ,QAAS,I,8BAGdU,IAAKQ,GAAG1B,KAAKG,QAAS,CAAEiB,OAAQ,IAAKE,SAAU,KAC/CtB,KAAKQ,QAAS,EAEdR,KAAKF,GAAG0B,UAAUG,OAAO,e,MAIdC,uBAAU,SAACC,EAAM9B,GAC9B,IAAIF,EAASgC,EAAM9B","file":"5.chunk.242b6a745322eb268897.js","sourcesContent":["import { component } from 'picoapp';\nimport { gsap } from 'gsap';\nimport './collapse.scss';\n\nclass Collapse {\n  constructor(el, ctx) {\n    this.el = el;\n    this.ctx = ctx;\n    this.identifier = el.dataset.identifier;\n    this.content = el.querySelector('.Collapse__content');\n    this.toggler = el.querySelector('.Collapse__toggle');\n    if (this.toggler) {\n      this.togglerInitialText = this.toggler.innerText;\n    }\n    this.isOpen = false;\n    this.bindEvents();\n  }\n  bindEvents() {\n    this.ctx.on('Collapse', (state) => {\n      if (state.identifier == this.identifier) {\n        if (typeof this[state.action] === 'function') {\n          this[state.action]();\n        }\n      }\n    });\n    if (this.toggler) {\n      this.toggler.addEventListener('click', (e) => {\n        this.toggle();\n      });\n    }\n  }\n  toggle() {\n    if (!this.isOpen) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n  open() {\n    gsap.set(this.content, { height: 'auto' });\n    gsap.from(this.content, { height: 0, duration: 0.2, immediateRender: false });\n    this.el.classList.add('is-open');\n    this.isOpen = true;\n  }\n  close() {\n    gsap.to(this.content, { height: '0', duration: 0.2 });\n    this.isOpen = false;\n    // this.toggler.innerText = this.togglerInitialText;\n    this.el.classList.remove('is-open');\n  }\n}\n\nexport default component((node, ctx) => {\n  new Collapse(node, ctx);\n});\n"],"sourceRoot":""}