{"version":3,"sources":["webpack:///./src/js/components/ui/cart/GiftCardTotals.js"],"names":["GiftCardTotals","parentNode","ctx","useState","amount","setAmount","useEffect","console","log","dataset","cartTotal","on","state","cart","total_price","vouchersCount","Math","floor","nextTier","totalUntilNextTier","className","toFixed","component","node","element","ReactDOM","render"],"mappings":"4KAaMA,G,MAAiB,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,WAAYC,EAAU,EAAVA,IAAU,EAClBC,mBAAS,MADS,WACvCC,EADuC,KAC/BC,EAD+B,KAI9CC,qBAAU,WACRC,QAAQC,IAAIP,EAAWQ,SACvBF,QAAQC,IAAI,mBACZH,EAAUJ,EAAWQ,QAAQC,WAG7BR,EAAIS,GAAG,cAAc,SAACC,GAEpBP,EAAUO,EAAMC,KAAKC,kBAEtB,IAEH,IAAIC,EAAgBC,KAAKC,MAAMb,EAnBf,MAoBZc,EAAWH,EAAgB,EAC3BI,GAAuBf,EArBX,KAqBoBc,GAAwB,KAAQ,EAEpE,OACE,yBAAKE,UAAU,mBACb,4CAxBa,IAwBML,EAA8B,IAAjD,eACA,2BAAOK,UAAU,UAAjB,iEACA,2BAAOA,UAAU,aAAjB,QACQD,EADR,6BA1Ba,IA2B0CD,EAAyB,KAAKG,QAAQ,GAD7F,kBAoBSC,uBAAU,SAACC,EAAMrB,GAC9B,IAAMsB,EAAU,kBAACxB,EAAD,CAAgBE,IAAKA,EAAKD,WAAYsB,IACtDE,IAASC,OAAOF,EAASD","file":"24.chunk.d81c29a5a0a39e76e72f.js","sourcesContent":["import React, { Component, useState, useEffect, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { component } from 'picoapp';\nimport axios from 'axios';\n\nconst getCartData = async () => {\n  const response = await axios.get('/cart.js', { headers: { Pragma: 'no-cache' } });\n  return response.data;\n};\n\nconst qualifier = 9900;\nconst giftAmount = 3000;\n\nconst GiftCardTotals = ({ parentNode, ctx }) => {\n  const [amount, setAmount] = useState(null);\n  // const [discount, setDiscount] = useState(null);\n\n  useEffect(() => {\n    console.log(parentNode.dataset);\n    console.log('hello gift card');\n    setAmount(parentNode.dataset.cartTotal);\n    // setDiscount(parentNode.dataset.initialdiscount);\n\n    ctx.on('cartUpdate', (state) => {\n      // console.log('new value', state.cart.total_price);\n      setAmount(state.cart.total_price);\n    });\n  }, []);\n\n  let vouchersCount = Math.floor(amount / qualifier);\n  let nextTier = vouchersCount + 1;\n  let totalUntilNextTier = ((amount - nextTier * qualifier) / 100) * -1;\n\n  return (\n    <div className=\"gift-cart-stats\">\n      <p>You've got a ${(vouchersCount * giftAmount) / 100} gift card.</p>\n      <small className=\"notice\">You will receive an email with your gift card after purchase.</small>\n      <small className=\"next-tier\">\n        Add ${totalUntilNextTier} to your order to get a ${((nextTier * giftAmount) / 100).toFixed(2)} gift card.\n      </small>\n    </div>\n  );\n\n  return (\n    <>\n      <p className=\"total\">{amount ? `$${(amount / 100).toFixed(2)}` : <span>Loading...</span>}</p>\n      {discount && (\n        <>\n          <p className=\"discount\">\n            <span>{discount}% OFF</span>\n          </p>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default component((node, ctx) => {\n  const element = <GiftCardTotals ctx={ctx} parentNode={node} />;\n  ReactDOM.render(element, node);\n});\n"],"sourceRoot":""}