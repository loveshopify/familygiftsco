{"version":3,"sources":["webpack:///./src/js/components/content/ProductGallery.js"],"names":["selectors","ProductGallery","el","ctx","this","init","initLightbox","mainSliderEl","querySelector","thumbsSliderEl","statusCurrent","statusTotal","parentController","getClosest","nextButton","prevButton","defaults","pageDots","cellAlign","imagesloaded","wrapAround","selectedAttraction","friction","dragThreshold","arrowShape","mainSlider","Flickity","prevNextButtons","thumbsSlider","draggable","bindEvents","updateStatus","initCustomSliderUI","resize","on","index","pointer","select","addEventListener","previous","next","currentIndex","selectedIndex","totalSlides","cells","length","innerText","containerEl","slider","slice","call","querySelectorAll","forEach","e","Chocolat","document","imageSize","component","node"],"mappings":"wvBAMA,IAAMA,EACO,aADPA,EAEI,4BAGJC,E,WACJ,WAAYC,EAAIC,GAAK,YACnBC,KAAKD,IAAMA,EACXC,KAAKC,KAAKH,GAEVE,KAAKE,e,yCAGFJ,GACHE,KAAKF,GAAKA,EACVE,KAAKG,aAAeH,KAAKF,GAAGM,cAAcR,GAC1CI,KAAKK,eAAiBL,KAAKF,GAAGM,cAAcR,GAC5CI,KAAKM,cAAgBN,KAAKF,GAAGM,cAAc,6BAC3CJ,KAAKO,YAAcP,KAAKF,GAAGM,cAAc,2BACzCJ,KAAKQ,iBAAmBC,YAAWX,EAAI,UACvCE,KAAKU,WAAaV,KAAKF,GAAGM,cAAc,SACxCJ,KAAKW,WAAaX,KAAKF,GAAGM,cAAc,e,oCAIxC,IAAIQ,EAAW,CACbC,UAAU,EACVC,UAAW,SACXC,cAAc,EACdC,YAAY,EACZC,mBAAoB,IACpBC,SAAU,IACVC,cAAe,GACfC,WACE,8eAYJpB,KAAKqB,WAAa,IAAIC,SAAStB,KAAKG,aAAlB,OACbS,GAXqB,CACxBW,iBAAiB,KAcnBvB,KAAKwB,aAAe,IAAIF,SAAStB,KAAKK,eAAlB,OACfO,GAbuB,CAC1BW,iBAAiB,EACjBT,UAAW,OACXE,YAAY,EACZS,WAAW,KAabzB,KAAK0B,aACL1B,KAAK2B,eACL3B,KAAK4B,mBAAmB5B,KAAKK,eAAgBL,KAAKwB,cAGlDxB,KAAKqB,WAAWQ,SAChB7B,KAAKwB,aAAaK,W,mCAGP,WACX7B,KAAKwB,aAAaM,GAAG,UAAU,SAACC,EAAOC,GACrC,EAAKX,WAAWY,OAAOF,MAGzB/B,KAAKqB,WAAWS,GAAG,UAAU,SAACC,EAAOC,GACnC,EAAKR,aAAaS,OAAOF,GACzB,EAAKJ,kBAGH3B,KAAKW,YACPX,KAAKW,WAAWuB,iBAAiB,SAAS,WACxC,EAAKb,WAAWc,cAGhBnC,KAAKU,YACPV,KAAKU,WAAWwB,iBAAiB,SAAS,WACxC,EAAKb,WAAWe,UAIhBpC,KAAKQ,kBACPR,KAAKQ,iBAAiB0B,iBAAiB,YAAY,WACjD,EAAKb,WAAWQ,c,qCAMpB,IAAIQ,EAAerC,KAAKqB,WAAWiB,cAAgB,EAC/CC,EAAcvC,KAAKqB,WAAWmB,MAAMC,OAEpCzC,KAAKM,gBACPN,KAAKM,cAAcoC,UAAYL,GAE7BrC,KAAKO,cACPP,KAAKO,YAAYmC,UAAYH,K,yCAIdI,EAAaC,GAET,GAAGC,MAAMC,KAAKH,EAAYI,iBAAiB,UAanDC,SAAQ,SAAClD,EAAIiC,GACxBjC,EAAGoC,iBAAiB,SAAS,SAACe,GAC5BL,EAAOX,OAAOF,W,qCAMlBmB,YAASC,SAASJ,iBAAiB,yBAA0B,CAE3DK,UAAW,gB,KAOFC,uBAAU,SAACC,EAAMvD,GAC9B,IAAIF,EAAeyD,EAAMvD","file":"11.chunk.0e87759f9748e4e7bd8e.js","sourcesContent":["import { component } from 'picoapp';\nimport { str2json, getClosest } from '../../utilities';\n// import delegate from 'delegate';\nimport Chocolat from 'chocolat';\nimport 'chocolat/dist/css/chocolat.css';\n\nconst selectors = {\n  mainImage: '.mainImage',\n  thumbs: '.Gallery__thumbs .wrapper',\n};\n\nclass ProductGallery {\n  constructor(el, ctx) {\n    this.ctx = ctx;\n    this.init(el);\n    // this.initSliders();\n    this.initLightbox();\n  }\n\n  init(el) {\n    this.el = el;\n    this.mainSliderEl = this.el.querySelector(selectors.mainImage);\n    this.thumbsSliderEl = this.el.querySelector(selectors.thumbs);\n    this.statusCurrent = this.el.querySelector('.Gallery__status .current');\n    this.statusTotal = this.el.querySelector('.Gallery__status .total');\n    this.parentController = getClosest(el, '.Modal');\n    this.nextButton = this.el.querySelector('.next');\n    this.prevButton = this.el.querySelector('.previous');\n  }\n\n  initSliders() {\n    var defaults = {\n      pageDots: false,\n      cellAlign: 'center',\n      imagesloaded: true,\n      wrapAround: true,\n      selectedAttraction: 0.01,\n      friction: 0.15,\n      dragThreshold: 10,\n      arrowShape:\n        'M24.7552323,51.4875645 C23.7482559,50.3911482 23.7482559,48.6150532 24.7552323,47.518637 L65.6194256,2.82355245 C66.1183779,2.27286376 66.7760878,2 67.4337976,2 C68.0915075,2 68.7446814,2.27286376 69.2481696,2.82355245 C70.2506101,3.91996867 70.2506101,5.70102487 69.2481696,6.79744109 L30.2028843,49.5031007 L69.2481696,92.2037992 C70.2506101,93.3002154 70.2506101,95.0812716 69.2481696,96.1776878 C68.2457291,97.2741041 66.6173302,97.2741041 65.6148897,96.1776878 L24.7552323,51.4875645 Z',\n    };\n    const mainSliderOptions = {\n      prevNextButtons: false,\n    };\n    const thumbsSliderOptions = {\n      prevNextButtons: false,\n      cellAlign: 'left',\n      wrapAround: false,\n      draggable: false,\n    };\n\n    this.mainSlider = new Flickity(this.mainSliderEl, {\n      ...defaults,\n      ...mainSliderOptions,\n    });\n\n    this.thumbsSlider = new Flickity(this.thumbsSliderEl, {\n      ...defaults,\n      ...thumbsSliderOptions,\n    });\n\n    this.bindEvents();\n    this.updateStatus();\n    this.initCustomSliderUI(this.thumbsSliderEl, this.thumbsSlider);\n\n    // Trigger resizes for layout updates\n    this.mainSlider.resize();\n    this.thumbsSlider.resize();\n  }\n\n  bindEvents() {\n    this.thumbsSlider.on('change', (index, pointer) => {\n      this.mainSlider.select(index);\n    });\n\n    this.mainSlider.on('change', (index, pointer) => {\n      this.thumbsSlider.select(index);\n      this.updateStatus();\n    });\n\n    if (this.prevButton) {\n      this.prevButton.addEventListener('click', () => {\n        this.mainSlider.previous();\n      });\n    }\n    if (this.nextButton) {\n      this.nextButton.addEventListener('click', () => {\n        this.mainSlider.next();\n      });\n    }\n\n    if (this.parentController) {\n      this.parentController.addEventListener('isActive', () => {\n        this.mainSlider.resize();\n      });\n    }\n  }\n\n  updateStatus() {\n    let currentIndex = this.mainSlider.selectedIndex + 1;\n    let totalSlides = this.mainSlider.cells.length;\n\n    if (this.statusCurrent) {\n      this.statusCurrent.innerText = currentIndex;\n    }\n    if (this.statusTotal) {\n      this.statusTotal.innerText = totalSlides;\n    }\n  }\n\n  initCustomSliderUI(containerEl, slider) {\n    // const cellsButtonGroup = containerEl;\n    const cellsButtons = [].slice.call(containerEl.querySelectorAll('.item'));\n    // console.log(cellsButtons);\n    // return;\n    // update buttons on select\n    // slider.on('cellSelect', (index) => {\n    //   var previousSelectedButton = cellsButtonGroup.querySelector(\n    //     '.is-selected'\n    //   );\n    //   var selectedButton = cellsButtonGroup.children[slider.selectedIndex];\n    //   previousSelectedButton.classList.remove('is-selected');\n    //   selectedButton.classList.add('is-selected');\n    // });\n    // cell select\n    cellsButtons.forEach((el, index) => {\n      el.addEventListener('click', (e) => {\n        slider.select(index);\n      });\n    });\n  }\n\n  initLightbox() {\n    Chocolat(document.querySelectorAll('.ProductGallery .zoom'), {\n      // allowZoom: false,\n      imageSize: 'contain',\n    });\n    // Chocolat(document.querySelectorAll('.Gallery__thumbs .item'));\n  }\n}\n\n// export default ProductGallery;\nexport default component((node, ctx) => {\n  new ProductGallery(node, ctx);\n});\n"],"sourceRoot":""}