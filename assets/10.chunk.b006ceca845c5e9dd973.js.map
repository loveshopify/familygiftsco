{"version":3,"sources":["webpack:///./node_modules/@shopify/theme-product-form/listeners.js","webpack:///./node_modules/@shopify/theme-product/theme-product.js","webpack:///./node_modules/@shopify/theme-product-form/theme-product-form.js","webpack:///./src/js/vendor/shopify/listeners.js","webpack:///./src/js/vendor/shopify/theme-product-form.js","webpack:///./node_modules/@shopify/theme-currency/currency.js","webpack:///./src/js/components/content/ProductForm2.js"],"names":["Listeners","this","entries","getVariantFromSerializedArray","product","collection","_validateProductStructure","optionArray","Array","isArray","TypeError","length","hasOwnProperty","Error","name","_validateSerializedArray","forEach","option","i","options","toLowerCase","value","_createOptionArrayFromOptionCollection","_validateOptionsArray","variants","filter","variant","every","index","getVariantFromOptionArray","Object","keys","constructor","prototype","add","element","event","fn","push","addEventListener","removeAll","listener","removeEventListener","selectors","ProductForm","_validateProductObject","_listeners","_onSubmit","bind","optionInputs","_initInputs","onOptionChange","quantityInputs","onQuantityChange","propertyInputs","onPropertyChange","destroy","inputs","transform","item","exec","reduce","input","checked","type","properties","propertyName","quantity","Number","parseInt","_setIdInputValue","idInputElement","querySelector","document","createElement","appendChild","toString","dataset","_getProductFormEventData","id","onFormSubmit","_onFormEvent","cb","Function","selector","slice","call","querySelectorAll","map","console","log","error","formatMoney","cents","format","replace","placeholderRegex","formatString","formatWithDelimiters","number","precision","thousands","decimal","isNaN","parts","toFixed","split","match","delegate","require","ProductFormComponent","el","ctx","init","bindEvents","formElement","priceEl","comparePriceEl","discountPercentageEl","productHandle","fetch","then","response","json","productJSON","productForm","e","keyCode","evt","createEvent","initEvent","dispatchEvent","fireEvent","handleClickTracking","available","selectedVariant","updateTextElements","url","test","concat","getUrlWithVariant","window","location","href","history","replaceState","path","CustomEvent","detail","innerText","price","compare_at_price","discountPercent","Math","round","_learnq","gtag","send_to","component","node"],"mappings":"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","file":"10.chunk.b006ceca845c5e9dd973.js","sourcesContent":["export default function Listeners() {\n  this.entries = [];\n}\n\nListeners.prototype.add = function(element, event, fn) {\n  this.entries.push({ element: element, event: event, fn: fn });\n  element.addEventListener(event, fn);\n};\n\nListeners.prototype.removeAll = function() {\n  this.entries = this.entries.filter(function(listener) {\n    listener.element.removeEventListener(listener.event, listener.fn);\n    return false;\n  });\n};\n","/**\n * Returns a product JSON object when passed a product URL\n * @param {*} url\n */\nexport function getProductJson(handle) {\n  return fetch('/products/' + handle + '.js').then(function(response) {\n    return response.json();\n  });\n}\n\n/**\n * Find a match in the project JSON (using a ID number) and return the variant (as an Object)\n * @param {Object} product Product JSON object\n * @param {Number} value Accepts Number (e.g. 6908023078973)\n * @returns {Object} The variant object once a match has been successful. Otherwise null will be return\n */\nexport function getVariantFromId(product, value) {\n  _validateProductStructure(product);\n\n  if (typeof value !== 'number') {\n    throw new TypeError(value + ' is not a Number.');\n  }\n\n  var result = product.variants.filter(function(variant) {\n    return variant.id === value;\n  });\n\n  return result[0] || null;\n}\n\n/**\n * Convert the Object (with 'name' and 'value' keys) into an Array of values, then find a match & return the variant (as an Object)\n * @param {Object} product Product JSON object\n * @param {Object} collection Object with 'name' and 'value' keys (e.g. [{ name: \"Size\", value: \"36\" }, { name: \"Color\", value: \"Black\" }])\n * @returns {Object || null} The variant object once a match has been successful. Otherwise null will be returned\n */\nexport function getVariantFromSerializedArray(product, collection) {\n  _validateProductStructure(product);\n\n  // If value is an array of options\n  var optionArray = _createOptionArrayFromOptionCollection(product, collection);\n  return getVariantFromOptionArray(product, optionArray);\n}\n\n/**\n * Find a match in the project JSON (using Array with option values) and return the variant (as an Object)\n * @param {Object} product Product JSON object\n * @param {Array} options List of submitted values (e.g. ['36', 'Black'])\n * @returns {Object || null} The variant object once a match has been successful. Otherwise null will be returned\n */\nexport function getVariantFromOptionArray(product, options) {\n  _validateProductStructure(product);\n  _validateOptionsArray(options);\n\n  var result = product.variants.filter(function(variant) {\n    return options.every(function(option, index) {\n      return variant.options[index] === option;\n    });\n  });\n\n  return result[0] || null;\n}\n\n/**\n * Creates an array of selected options from the object\n * Loops through the project.options and check if the \"option name\" exist (product.options.name) and matches the target\n * @param {Object} product Product JSON object\n * @param {Array} collection Array of object (e.g. [{ name: \"Size\", value: \"36\" }, { name: \"Color\", value: \"Black\" }])\n * @returns {Array} The result of the matched values. (e.g. ['36', 'Black'])\n */\nfunction _createOptionArrayFromOptionCollection(product, collection) {\n  _validateProductStructure(product);\n  _validateSerializedArray(collection);\n\n  var optionArray = [];\n\n  collection.forEach(function(option) {\n    for (var i = 0; i < product.options.length; i++) {\n      if (product.options[i].name.toLowerCase() === option.name.toLowerCase()) {\n        optionArray[i] = option.value;\n        break;\n      }\n    }\n  });\n\n  return optionArray;\n}\n\n/**\n * Check if the product data is a valid JS object\n * Error will be thrown if type is invalid\n * @param {object} product Product JSON object\n */\nfunction _validateProductStructure(product) {\n  if (typeof product !== 'object') {\n    throw new TypeError(product + ' is not an object.');\n  }\n\n  if (Object.keys(product).length === 0 && product.constructor === Object) {\n    throw new Error(product + ' is empty.');\n  }\n}\n\n/**\n * Validate the structure of the array\n * It must be formatted like jQuery's serializeArray()\n * @param {Array} collection Array of object [{ name: \"Size\", value: \"36\" }, { name: \"Color\", value: \"Black\" }]\n */\nfunction _validateSerializedArray(collection) {\n  if (!Array.isArray(collection)) {\n    throw new TypeError(collection + ' is not an array.');\n  }\n\n  if (collection.length === 0) {\n    return [];\n  }\n\n  if (collection[0].hasOwnProperty('name')) {\n    if (typeof collection[0].name !== 'string') {\n      throw new TypeError(\n        'Invalid value type passed for name of option ' +\n          collection[0].name +\n          '. Value should be string.'\n      );\n    }\n  } else {\n    throw new Error(collection[0] + 'does not contain name key.');\n  }\n}\n\n/**\n * Validate the structure of the array\n * It must be formatted as list of values\n * @param {Array} collection Array of object (e.g. ['36', 'Black'])\n */\nfunction _validateOptionsArray(options) {\n  if (Array.isArray(options) && typeof options[0] === 'object') {\n    throw new Error(options + 'is not a valid array of options.');\n  }\n}\n","import Listeners from './listeners';\nimport { getVariantFromSerializedArray } from '@shopify/theme-product';\n\nvar selectors = {\n  idInput: '[name=\"id\"]',\n  optionInput: '[name^=\"options\"]',\n  quantityInput: '[name=\"quantity\"]',\n  propertyInput: '[name^=\"properties\"]'\n};\n\n// Public Methods\n// -----------------------------------------------------------------------------\n\n/**\n * Returns a URL with a variant ID query parameter. Useful for updating window.history\n * with a new URL based on the currently select product variant.\n * @param {string} url - The URL you wish to append the variant ID to\n * @param {number} id  - The variant ID you wish to append to the URL\n * @returns {string} - The new url which includes the variant ID query parameter\n */\n\nexport function getUrlWithVariant(url, id) {\n  if (/variant=/.test(url)) {\n    return url.replace(/(variant=)[^&]+/, '$1' + id);\n  } else if (/\\?/.test(url)) {\n    return url.concat('&variant=').concat(id);\n  }\n\n  return url.concat('?variant=').concat(id);\n}\n\n/**\n * Constructor class that creates a new instance of a product form controller.\n *\n * @param {Element} element - DOM element which is equal to the <form> node wrapping product form inputs\n * @param {Object} product - A product object\n * @param {Object} options - Optional options object\n * @param {Function} options.onOptionChange - Callback for whenever an option input changes\n * @param {Function} options.onQuantityChange - Callback for whenever an quantity input changes\n * @param {Function} options.onPropertyChange - Callback for whenever a property input changes\n * @param {Function} options.onFormSubmit - Callback for whenever the product form is submitted\n */\nexport function ProductForm(element, product, options) {\n  this.element = element;\n  this.product = _validateProductObject(product);\n\n  options = options || {};\n\n  this._listeners = new Listeners();\n  this._listeners.add(\n    this.element,\n    'submit',\n    this._onSubmit.bind(this, options)\n  );\n\n  this.optionInputs = this._initInputs(\n    selectors.optionInput,\n    options.onOptionChange\n  );\n\n  this.quantityInputs = this._initInputs(\n    selectors.quantityInput,\n    options.onQuantityChange\n  );\n\n  this.propertyInputs = this._initInputs(\n    selectors.propertyInput,\n    options.onPropertyChange\n  );\n}\n\n/**\n * Cleans up all event handlers that were assigned when the Product Form was constructed.\n * Useful for use when a section needs to be reloaded in the theme editor.\n */\nProductForm.prototype.destroy = function() {\n  this._listeners.removeAll();\n};\n\n/**\n * Getter method which returns the array of currently selected option values\n *\n * @returns {Array} An array of option values\n */\nProductForm.prototype.options = function() {\n  return _serializeOptionValues(this.optionInputs, function(item) {\n    var regex = /(?:^(options\\[))(.*?)(?:\\])/;\n    item.name = regex.exec(item.name)[2]; // Use just the value between 'options[' and ']'\n    return item;\n  });\n};\n\n/**\n * Getter method which returns the currently selected variant, or `null` if variant\n * doesn't exist.\n *\n * @returns {Object|null} Variant object\n */\nProductForm.prototype.variant = function() {\n  return getVariantFromSerializedArray(this.product, this.options());\n};\n\n/**\n * Getter method which returns a collection of objects containing name and values\n * of property inputs\n *\n * @returns {Array} Collection of objects with name and value keys\n */\nProductForm.prototype.properties = function() {\n  var properties = _serializePropertyValues(this.propertyInputs, function(\n    propertyName\n  ) {\n    var regex = /(?:^(properties\\[))(.*?)(?:\\])/;\n    var name = regex.exec(propertyName)[2]; // Use just the value between 'properties[' and ']'\n    return name;\n  });\n\n  return Object.entries(properties).length === 0 ? null : properties;\n};\n\n/**\n * Getter method which returns the current quantity or 1 if no quantity input is\n * included in the form\n *\n * @returns {Array} Collection of objects with name and value keys\n */\nProductForm.prototype.quantity = function() {\n  return this.quantityInputs[0]\n    ? Number.parseInt(this.quantityInputs[0].value, 10)\n    : 1;\n};\n\n// Private Methods\n// -----------------------------------------------------------------------------\nProductForm.prototype._setIdInputValue = function(value) {\n  var idInputElement = this.element.querySelector(selectors.idInput);\n\n  if (!idInputElement) {\n    idInputElement = document.createElement('input');\n    idInputElement.type = 'hidden';\n    idInputElement.name = 'id';\n    this.element.appendChild(idInputElement);\n  }\n\n  idInputElement.value = value.toString();\n};\n\nProductForm.prototype._onSubmit = function(options, event) {\n  event.dataset = this._getProductFormEventData();\n\n  if (event.dataset.variant) {\n    this._setIdInputValue(event.dataset.variant.id);\n  }\n\n  if (options.onFormSubmit) {\n    options.onFormSubmit(event);\n  }\n};\n\nProductForm.prototype._onFormEvent = function(cb) {\n  if (typeof cb === 'undefined') {\n    return Function.prototype;\n  }\n\n  return function(event) {\n    event.dataset = this._getProductFormEventData();\n    cb(event);\n  }.bind(this);\n};\n\nProductForm.prototype._initInputs = function(selector, cb) {\n  var elements = Array.prototype.slice.call(\n    this.element.querySelectorAll(selector)\n  );\n\n  return elements.map(\n    function(element) {\n      this._listeners.add(element, 'change', this._onFormEvent(cb));\n      return element;\n    }.bind(this)\n  );\n};\n\nProductForm.prototype._getProductFormEventData = function() {\n  return {\n    options: this.options(),\n    variant: this.variant(),\n    properties: this.properties(),\n    quantity: this.quantity()\n  };\n};\n\nfunction _serializeOptionValues(inputs, transform) {\n  return inputs.reduce(function(options, input) {\n    if (\n      input.checked || // If input is a checked (means type radio or checkbox)\n      (input.type !== 'radio' && input.type !== 'checkbox') // Or if its any other type of input\n    ) {\n      options.push(transform({ name: input.name, value: input.value }));\n    }\n\n    return options;\n  }, []);\n}\n\nfunction _serializePropertyValues(inputs, transform) {\n  return inputs.reduce(function(properties, input) {\n    if (\n      input.checked || // If input is a checked (means type radio or checkbox)\n      (input.type !== 'radio' && input.type !== 'checkbox') // Or if its any other type of input\n    ) {\n      properties[transform(input.name)] = input.value;\n    }\n\n    return properties;\n  }, {});\n}\n\nfunction _validateProductObject(product) {\n  if (typeof product !== 'object') {\n    throw new TypeError(product + ' is not an object.');\n  }\n\n  if (typeof product.variants[0].options === 'undefined') {\n    throw new TypeError(\n      'Product object is invalid. Make sure you use the product object that is output from {{ product | json }} or from the http://[your-product-url].js route'\n    );\n  }\n\n  return product;\n}\n","export default function Listeners() {\n  this.entries = [];\n}\n\nListeners.prototype.add = function(element, event, fn) {\n  this.entries.push({ element: element, event: event, fn: fn });\n  element.addEventListener(event, fn);\n};\n\nListeners.prototype.removeAll = function() {\n  this.entries = this.entries.filter(function(listener) {\n    listener.element.removeEventListener(listener.event, listener.fn);\n    return false;\n  });\n};\n","import Listeners from './listeners';\nimport { getVariantFromSerializedArray } from '@shopify/theme-product';\n\nvar selectors = {\n  idInput: '[name=\"id\"]',\n  optionInput: '[name^=\"options\"]',\n  quantityInput: '[name=\"quantity\"]',\n  propertyInput: '[name^=\"properties\"]',\n};\n\n// Public Methods\n// -----------------------------------------------------------------------------\n\n/**\n * Returns a URL with a variant ID query parameter. Useful for updating window.history\n * with a new URL based on the currently select product variant.\n * @param {string} url - The URL you wish to append the variant ID to\n * @param {number} id  - The variant ID you wish to append to the URL\n * @returns {string} - The new url which includes the variant ID query parameter\n */\n\nexport function getUrlWithVariant(url, id) {\n  if (/variant=/.test(url)) {\n    return url.replace(/(variant=)[^&]+/, '$1' + id);\n  } else if (/\\?/.test(url)) {\n    return url.concat('&variant=').concat(id);\n  }\n\n  return url.concat('?variant=').concat(id);\n}\n\n/**\n * Constructor class that creates a new instance of a product form controller.\n *\n * @param {Element} element - DOM element which is equal to the <form> node wrapping product form inputs\n * @param {Object} product - A product object\n * @param {Object} options - Optional options object\n * @param {Function} options.onOptionChange - Callback for whenever an option input changes\n * @param {Function} options.onQuantityChange - Callback for whenever an quantity input changes\n * @param {Function} options.onPropertyChange - Callback for whenever a property input changes\n * @param {Function} options.onFormSubmit - Callback for whenever the product form is submitted\n */\nexport function ProductForm(element, product, options) {\n  this.element = element;\n  this.product = _validateProductObject(product);\n\n  options = options || {};\n\n  this._listeners = new Listeners();\n  this._listeners.add(this.element, 'submit', this._onSubmit.bind(this, options));\n\n  this.optionInputs = this._initInputs(selectors.optionInput, options.onOptionChange);\n\n  this.quantityInputs = this._initInputs(selectors.quantityInput, options.onQuantityChange);\n\n  this.propertyInputs = this._initInputs(selectors.propertyInput, options.onPropertyChange);\n}\n\n/**\n * Cleans up all event handlers that were assigned when the Product Form was constructed.\n * Useful for use when a section needs to be reloaded in the theme editor.\n */\nProductForm.prototype.destroy = function () {\n  this._listeners.removeAll();\n};\n\n/**\n * Getter method which returns the array of currently selected option values\n *\n * @returns {Array} An array of option values\n */\nProductForm.prototype.options = function () {\n  return _serializeOptionValues(this.optionInputs, function (item) {\n    var regex = /(?:^(options\\[))(.*?)(?:\\])/;\n    item.name = regex.exec(item.name)[2]; // Use just the value between 'options[' and ']'\n    return item;\n  });\n};\n\n/**\n * Getter method which returns the currently selected variant, or `null` if variant\n * doesn't exist.\n *\n * @returns {Object|null} Variant object\n */\nProductForm.prototype.variant = function () {\n  return getVariantFromSerializedArray(this.product, this.options());\n};\n\n/**\n * Getter method which returns a collection of objects containing name and values\n * of property inputs\n *\n * @returns {Array} Collection of objects with name and value keys\n */\nProductForm.prototype.properties = function () {\n  try {\n    var properties = _serializePropertyValues(this.propertyInputs, function (propertyName) {\n      var regex = /(?:^(properties\\[))(.*?)(?:\\])/;\n      console.log(propertyName);\n      var name = regex.exec(propertyName)[2]; // Use just the value between 'properties[' and ']'\n      return name;\n    });\n\n    return Object.entries(properties).length === 0 ? null : properties;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n/**\n * Getter method which returns the current quantity or 1 if no quantity input is\n * included in the form\n *\n * @returns {Array} Collection of objects with name and value keys\n */\nProductForm.prototype.quantity = function () {\n  return this.quantityInputs[0] ? Number.parseInt(this.quantityInputs[0].value, 10) : 1;\n};\n\n// Private Methods\n// -----------------------------------------------------------------------------\nProductForm.prototype._setIdInputValue = function (value) {\n  var idInputElement = this.element.querySelector(selectors.idInput);\n\n  if (!idInputElement) {\n    idInputElement = document.createElement('input');\n    idInputElement.type = 'hidden';\n    idInputElement.name = 'id';\n    this.element.appendChild(idInputElement);\n  }\n\n  idInputElement.value = value.toString();\n};\n\nProductForm.prototype._onSubmit = function (options, event) {\n  event.dataset = this._getProductFormEventData();\n\n  if (event.dataset.variant) {\n    this._setIdInputValue(event.dataset.variant.id);\n  }\n\n  if (options.onFormSubmit) {\n    options.onFormSubmit(event);\n  }\n};\n\nProductForm.prototype._onFormEvent = function (cb) {\n  if (typeof cb === 'undefined') {\n    return Function.prototype;\n  }\n\n  return function (event) {\n    event.dataset = this._getProductFormEventData();\n    cb(event);\n  }.bind(this);\n};\n\nProductForm.prototype._initInputs = function (selector, cb) {\n  var elements = Array.prototype.slice.call(this.element.querySelectorAll(selector));\n  return elements.map(\n    function (element) {\n      this._listeners.add(element, 'change', this._onFormEvent(cb));\n      return element;\n    }.bind(this)\n  );\n};\n\nProductForm.prototype._getProductFormEventData = function () {\n  return {\n    options: this.options(),\n    variant: this.variant(),\n    properties: this.properties(),\n    quantity: this.quantity(),\n  };\n};\n\nfunction _serializeOptionValues(inputs, transform) {\n  return inputs.reduce(function (options, input) {\n    if (\n      input.checked || // If input is a checked (means type radio or checkbox)\n      (input.type !== 'radio' && input.type !== 'checkbox') // Or if its any other type of input\n    ) {\n      options.push(transform({ name: input.name, value: input.value }));\n    }\n\n    return options;\n  }, []);\n}\n\nfunction _serializePropertyValues(inputs, transform) {\n  return inputs.reduce(function (properties, input) {\n    if (\n      input.checked || // If input is a checked (means type radio or checkbox)\n      (input.type !== 'radio' && input.type !== 'checkbox') // Or if its any other type of input\n    ) {\n      properties[transform(input.name)] = input.value;\n    }\n\n    return properties;\n  }, {});\n}\n\nfunction _validateProductObject(product) {\n  if (typeof product !== 'object') {\n    throw new TypeError(product + ' is not an object.');\n  }\n\n  if (typeof product.variants[0].options === 'undefined') {\n    throw new TypeError(\n      'Product object is invalid. Make sure you use the product object that is output from {{ product | json }} or from the http://[your-product-url].js route'\n    );\n  }\n\n  return product;\n}\n","/**\n * Currency Helpers\n * -----------------------------------------------------------------------------\n * A collection of useful functions that help with currency formatting\n *\n * Current contents\n * - formatMoney - Takes an amount in cents and returns it as a formatted dollar value.\n *\n */\n\nconst moneyFormat = '${{amount}}';\n\n/**\n * Format money values based on your shop currency settings\n * @param  {Number|string} cents - value in cents or dollar amount e.g. 300 cents\n * or 3.00 dollars\n * @param  {String} format - shop money_format setting\n * @return {String} value - formatted value\n */\nexport function formatMoney(cents, format) {\n  if (typeof cents === 'string') {\n    cents = cents.replace('.', '');\n  }\n  let value = '';\n  const placeholderRegex = /\\{\\{\\s*(\\w+)\\s*\\}\\}/;\n  const formatString = format || moneyFormat;\n\n  function formatWithDelimiters(\n    number,\n    precision = 2,\n    thousands = ',',\n    decimal = '.'\n  ) {\n    if (isNaN(number) || number == null) {\n      return 0;\n    }\n\n    number = (number / 100.0).toFixed(precision);\n\n    const parts = number.split('.');\n    const dollarsAmount = parts[0].replace(\n      /(\\d)(?=(\\d\\d\\d)+(?!\\d))/g,\n      `$1${thousands}`\n    );\n    const centsAmount = parts[1] ? decimal + parts[1] : '';\n\n    return dollarsAmount + centsAmount;\n  }\n\n  switch (formatString.match(placeholderRegex)[1]) {\n    case 'amount':\n      value = formatWithDelimiters(cents, 2);\n      break;\n    case 'amount_no_decimals':\n      value = formatWithDelimiters(cents, 0);\n      break;\n    case 'amount_with_comma_separator':\n      value = formatWithDelimiters(cents, 2, '.', ',');\n      break;\n    case 'amount_no_decimals_with_comma_separator':\n      value = formatWithDelimiters(cents, 0, '.', ',');\n      break;\n  }\n\n  return formatString.replace(placeholderRegex, value);\n}\n","import { component } from 'picoapp';\nimport { getUrlWithVariant } from '@shopify/theme-product-form';\nimport { ProductForm } from '../../vendor/shopify/theme-product-form';\nimport { formatMoney } from '@shopify/theme-currency';\nconst delegate = require('delegate');\n\nconst selectors = {\n  comparePrice: '[data-compare-price]',\n  productPrice: '[data-product-price]',\n  productDiscountPercentage: '[data-product-discount-percentage]',\n};\n\nclass ProductFormComponent {\n  constructor(el, ctx) {\n    this.el = el;\n    this.ctx = ctx;\n    this.init();\n    this.bindEvents();\n    this.onOptionChange = this.onOptionChange.bind(this);\n  }\n\n  init() {\n    // Cache DOM nodes\n    this.formElement = this.el;\n    this.priceEl = this.el.querySelector(selectors.productPrice);\n    this.comparePriceEl = this.el.querySelector(selectors.comparePrice);\n    this.discountPercentageEl = this.el.querySelector(selectors.productDiscountPercentage);\n\n    // Fetch variants info\n    const productHandle = this.formElement.dataset.productHandle;\n    fetch(`/products/${productHandle}.js`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((productJSON) => {\n        this.productForm = new ProductForm(this.formElement, productJSON, {\n          onOptionChange: this.onOptionChange,\n        });\n      });\n  }\n\n  bindEvents() {\n    this.el.querySelectorAll('.product-option label').forEach((item) => {\n      item.addEventListener('keydown', (e) => {\n        if (e.keyCode === 13) {\n          let element = item.querySelector('input');\n          if (element) {\n            element.checked = true;\n            if ('createEvent' in document) {\n              var evt = document.createEvent('HTMLEvents');\n              evt.initEvent('change', false, true);\n              element.dispatchEvent(evt);\n            } else {\n              element.fireEvent('onchange');\n            }\n          }\n        }\n      });\n    });\n\n    delegate(\n      this.formElement.querySelector('.add-to-cart-wrapper'),\n      'button',\n      'click',\n      (e) => {\n        this.handleClickTracking();\n      },\n      false\n    );\n  }\n\n  onOptionChange(event) {\n    const variant = event.dataset.variant;\n\n    if (variant === null) {\n      console.log('no variant');\n      // The combination of selected options does not have a matching variant\n    } else if (variant && !variant.available) {\n      console.log('not available');\n      // The combination of selected options has a matching variant but it is\n      // currently unavailable\n    } else if (variant && variant.available) {\n      // console.log('available');\n      // console.log(this.productForm.options());\n      let selectedVariant = this.productForm.variant();\n      this.updateTextElements(selectedVariant);\n      // The combination of selected options has a matching variant and it is\n      // available\n    }\n\n    const url = getUrlWithVariant(window.location.href, variant.id);\n    window.history.replaceState({ path: url }, '', url);\n\n    // Dispatch Event\n    const isActive = new CustomEvent('changedVariant', { detail: { variant } });\n    // TODO: This causes error with Customily when on products using the other customizer\n    // document.body.dispatchEvent(isActive);\n  }\n\n  updateTextElements(variant) {\n    this.priceEl.innerText = formatMoney(variant.price);\n    this.comparePriceEl.innerText = formatMoney(variant.compare_at_price);\n    let discountPercent = Math.round(((variant.compare_at_price - variant.price) * 100) / variant.compare_at_price);\n    this.discountPercentageEl.innerText = discountPercent;\n  }\n\n  handleClickTracking() {\n    var _learnq = _learnq || [];\n    _learnq.push(['track', 'Added to Cart', item]);\n    if (typeof gtag === 'function') {\n      gtag('event', 'conversion', { send_to: 'AW-602103002/P8R0CImi29sBENq5jZ8C' });\n    }\n  }\n}\n\nexport default component((node, ctx) => {\n  new ProductFormComponent(node, ctx);\n});\n"],"sourceRoot":""}