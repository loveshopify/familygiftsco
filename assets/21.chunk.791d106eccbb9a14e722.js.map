{"version":3,"sources":["webpack:///./src/js/components/ui/StepperInput.js"],"names":["StepperInput","parentNode","ctx","useState","data","setData","useEffect","dataEl","nextElementSibling","JSON","parse","innerText","error","console","handleUpdate","step","newValue","value","min","emit","key","type","onClick","name","id","component","node","element","ReactDOM","render"],"mappings":"+uBAIA,IAAMA,EAAe,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,WAAYC,EAAU,EAAVA,IAAU,EACpBC,mBAAS,MADW,WACrCC,EADqC,KAC/BC,EAD+B,KAa5C,GAVAC,qBAAU,WACR,IACE,IAAIC,EAASN,EAAWO,mBACpBJ,EAAOK,KAAKC,MAAMH,EAAOI,WAC7BN,EAAQD,GACR,MAAOQ,GACPC,QAAQD,MAAM,iCAEf,KAEER,EACH,OAAO,KAGT,IAAMU,EAAe,SAACC,GACpB,IAAIC,EAAWZ,EAAKa,MAAQF,EACxBC,EAAWZ,EAAKc,MACpBb,EAAQ,EAAD,KAAMD,GAAN,IAAYa,MAAOD,KAC1Bd,EAAIiB,KAAK,uBAAwB,CAAEC,IAAKhB,EAAKgB,IAAKH,MAAOD,MAO3D,OACE,oCACE,4BAAQK,KAAK,SAASC,QAAS,kBAAMR,GAAc,KAAnD,KAGA,2BAAOO,KAAK,SAASE,KAAMnB,EAAKmB,KAAMC,GAAIpB,EAAKgB,IAAKH,MAAOb,EAAKa,QAChE,4BAAQI,KAAK,SAASC,QAAS,kBAAMR,EAAa,KAAlD,OAOSW,uBAAU,SAACC,EAAMxB,GAC9B,IAAMyB,EAAU,kBAAC3B,EAAD,CAAcE,IAAKA,EAAKD,WAAYyB,IACpDE,IAASC,OAAOF,EAASD","file":"21.chunk.791d106eccbb9a14e722.js","sourcesContent":["import React, { Component, useState, useEffect, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { component } from 'picoapp';\n\nconst StepperInput = ({ parentNode, ctx }) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    try {\n      let dataEl = parentNode.nextElementSibling;\n      let data = JSON.parse(dataEl.innerText);\n      setData(data);\n    } catch (error) {\n      console.error('Unable to parse input data');\n    }\n  }, []);\n\n  if (!data) {\n    return null;\n  }\n\n  const handleUpdate = (step) => {\n    let newValue = data.value + step;\n    if (newValue < data.min) return;\n    setData({ ...data, value: newValue });\n    ctx.emit('stepper_input_change', { key: data.key, value: newValue });\n    // setTimeout(() => {\n    //   const event = new Event('stepper_input_change');\n    //   document.body.dispatchEvent(event);\n    // }, 200);\n  };\n\n  return (\n    <>\n      <button type=\"button\" onClick={() => handleUpdate(-1)}>\n        -\n      </button>\n      <input type=\"number\" name={data.name} id={data.key} value={data.value} />\n      <button type=\"button\" onClick={() => handleUpdate(1)}>\n        +\n      </button>\n    </>\n  );\n};\n\nexport default component((node, ctx) => {\n  const element = <StepperInput ctx={ctx} parentNode={node} />;\n  ReactDOM.render(element, node);\n});\n"],"sourceRoot":""}